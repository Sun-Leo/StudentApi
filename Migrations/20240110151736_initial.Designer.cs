// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace StudentApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240110151736_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LessonInfo", b =>
                {
                    b.Property<int>("LessonInfoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LessonInfoID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentInfoID")
                        .HasColumnType("int");

                    b.HasKey("LessonInfoID");

                    b.HasIndex("StudentInfoID");

                    b.ToTable("lessonInfos");
                });

            modelBuilder.Entity("StudentInfo", b =>
                {
                    b.Property<int>("StudentInfoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentInfoID"));

                    b.Property<string>("NameSurname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentInfoID");

                    b.ToTable("StudentInfos");
                });

            modelBuilder.Entity("LessonInfo", b =>
                {
                    b.HasOne("StudentInfo", null)
                        .WithMany("LessonInfos")
                        .HasForeignKey("StudentInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInfo", b =>
                {
                    b.Navigation("LessonInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
